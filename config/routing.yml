#
# CORS preflight requests
#
oc_api_cors:
    url: /api/*
    class: sfRequestRoute
    param: { module: ocApiOAuth, action: preflight}
    options:
        secure: false
    requirements:
        sf_method: [OPTIONS]

#
# LOGIN
#
oc_api_login:
    url: /api/v2/login
    class: sfRequestRoute
    param: { module: ocApiCustomers, action: login }
    requirements:
        sf_method: [GET, POST]
oc_api_logout:
    url: /api/v2/logout
    class: sfRequestRoute
    param: { module: ocApiCustomers, action: logout }
    requirements:
        sf_method: [GET, POST]

#
# CUSTOMER
#
oc_api_customers:
    url: /api/v2/customers
    class: sfRequestRoute
    param: { module: ocApiCustomers, action: index }
    requirements:
        sf_method: [GET, POST]

oc_api_customers_resource:
    url: /api/v2/customers/:id
    class: sfRequestRoute
    param: { module: ocApiCustomers, action: resource }
    requirements:
        id: \d+
        sf_method: [GET, POST, DELETE]

#
# CUSTOMER ORDER
#
oc_api_customers_orders:
    url: /api/v2/customers/:id/orders
    class: sfRequestRoute
    param: { module: ocApiCustomerOrders, action: index }
    requirements:
        id: \d+
        sf_method: [GET]

oc_api_customers_orders_resource:
    url: /api/v2/customers/:id/orders/:order_id
    class: sfRequestRoute
    param: { module: ocApiCustomerOrders, action: resource }
    requirements:
        id: \d+
        order_id: \d+
        sf_method: [GET]


#
# MANIFESTATION
#
oc_api_manifestations:
    url: /api/v2/manifestations
    class: sfRequestRoute
    param: { module: ocApiManifestations, action: index }
    requirements:
        sf_method: [GET]

oc_api_manifestations_resource:
    url: /api/v2/manifestations/:id
    class: sfRequestRoute
    param: { module: ocApiManifestations, action: resource }
    requirements:
        id: \d+
        sf_method: [GET]

#
# ORDERS
#

oc_api_orders:
    url: /api/v2/orders
    class: sfRequestRoute
    param: { module: ocApiOrders, action: index }
    requirements:
        sf_method: [GET]

oc_api_orders_resource:
    url: /api/v2/orders/:id
    class: sfRequestRoute
    param: { module: ocApiOrders, action: resource }
    requirements:
        id: \d+
        sf_method: [GET]

oc_api_orders_action:
    url: /api/v2/orders/:do_action/:id
    class: sfRequestRoute
    param: { module: ocApiOrders, action: action }
    requirements:
        id: \d+
        do_action: ship|cancel|complete
        sf_method: [GET]

#
# CARTS
#
oc_api_carts:
    url: /api/v2/carts
    class: sfRequestRoute
    param: { module: ocApiCarts, action: index }
    requirements:
        sf_method: [GET, POST]

oc_api_carts_resource:
    url: /api/v2/carts/:id
    class: sfRequestRoute
    param: { module: ocApiCarts, action: resource }
    requirements:
        id: \d+
        sf_method: [GET, POST, DELETE]

#
# CART ITEMS
#
oc_api_carts_items:
    url: /api/v2/carts/:id/items
    class: sfRequestRoute
    param: { module: ocApiCartItems, action: index }
    requirements:
        id: \d+
        sf_method: [GET, POST]

oc_api_carts_items_resource:
    url: /api/v2/carts/:id/items/:item_id
    class: sfRequestRoute
    param: { module: ocApiCartItems, action: resource }
    requirements:
        id: \d+
        item_id: \d+
        sf_method: [GET,POST,DELETE]

#
# CHECKOUTS
#
oc_api_checkouts:
    url: /api/v2/checkouts/:cart_id
    class: sfRequestRoute
    param: { module: ocApiCheckouts, action: resource }
    requirements:
        cart_id: \d+
        sf_method: [GET]

oc_api_checkouts_addressing:
    url: /api/v2/checkouts/addressing/:cart_id
    class: sfRequestRoute
    param: { module: ocApiCheckouts, action: addressing }
    requirements:
        cart_id: \d+
        sf_method: [POST]

oc_api_checkouts_payments:
    url: /api/v2/checkouts/select-payment/:cart_id
    class: sfRequestRoute
    param: { module: ocApiCheckouts, action: payments }
    requirements:
        cart_id: \d+
        sf_method: [GET]

oc_api_checkouts_payments_select:
    url: /api/v2/checkouts/select-payment/:cart_id
    class: sfRequestRoute
    param: { module: ocApiCheckouts, action: selectPayments }
    requirements:
        cart_id: \d+
        sf_method: [POST]

oc_api_checkouts_complete:
    url: /api/v2/checkouts/complete/:cart_id
    class: sfRequestRoute
    param: { module: ocApiCheckouts, action: complete }
    requirements:
        cart_id: \d+
        sf_method: [POST]


#
# EVENTS
#
oc_api_events:
    url: /api/v2/events
    class: sfRequestRoute
    param: { module: ocApiEvents, action: index }
    requirements:
        sf_method: [GET, POST]

oc_api_events_resource:
    url: /api/v2/events/:id
    class: sfRequestRoute
    param: { module: ocApiEvents, action: resource }
    requirements:
        id: \d+
        sf_method: [GET]


#
# PAYMENTS
#
oc_api_payments:
    url: /api/v2/payments
    class: sfRequestRoute
    param: { module: ocApiPayments, action: index }
    requirements:
        sf_method: [GET]

oc_api_payments_resource:
    url: /api/v2/payments/:id
    class: sfRequestRoute
    param: { module: ocApiPayments, action: resource }
    requirements:
        id: \d+
        sf_method: [GET]

#
# PRICES
#
oc_api_prices:
    url: /api/v2/prices
    class: sfRequestRoute
    param: { module: ocApiPrices, action: index }
    requirements:
        sf_method: [GET]

#
# PRODUCTS
#
oc_api_products:
    url: /api/v2/products
    class: sfRequestRoute
    param: { module: ocApiProducts, action: index }
    requirements:
        sf_method: [GET]

oc_api_products_resource:
    url: /api/v2/products/:id
    class: sfRequestRoute
    param: { module: ocApiProducts, action: resource }
    requirements:
        id: \d+
        sf_method: [GET]


#
# PRODUCT CATEGORIES
#
oc_api_product_categories:
    url: /api/v2/productcategories
    class: sfRequestRoute
    param: { module: ocApiProductCategories, action: index }
    requirements:
        sf_method: [GET]


#
# PRODUCTS
#
oc_api_promotions:
    url: /api/v2/promotions
    class: sfRequestRoute
    param: { module: ocApiPromotions, action: index }
    requirements:
        sf_method: [GET]

oc_api_promotions_resource:
    url: /api/v2/promotions/:id
    class: sfRequestRoute
    param: { module: ocApiPromotions, action: resource }
    requirements:
        id: \d+
        sf_method: [GET]

#
# AUTH
#
oc_api_oauth_token:
    url: /api/oauth/v2/token
    class: sfRequestRoute
    param: { module: ocApiOAuth, action: token }
    options:
        secure: false
    requirements:
        sf_method: [GET, POST]





#
# BACKEND
#

oc_setup:
  class: sfDoctrineRouteCollection
  options:
    model:                OcConfig
    module:               ocSetup
    prefix_path:          /oc_setup
    column:               id
    with_wildcard_routes: true

oc_time_slot:
  class: sfDoctrineRouteCollection
  options:
    model:                OcTimeSlot
    module:               ocTimeSlot
    prefix_path:          /oc_time_slot
    column:               id
    with_wildcard_routes: true
oc_time_slot_refresh:
  url: /oc_time_slot/refresh/*
  class: sfRequestRoute
  param: { module: ocTimeSlot, action: refresh }
  requirements:
    sf_method: [GET]

oc_application:
  class: sfDoctrineRouteCollection
  options:
    model:                OcApplication
    module:               ocApplication
    prefix_path:          /ocApplication
    column:               id
    with_wildcard_routes: true

oc_backend:
  class: sfDoctrineRouteCollection
  options:
    model:                OcProfessional
    module:               ocBackend
    prefix_path:          /oc_backend
    column:               id
    with_wildcard_routes: true

oc_backend_events:
    url: /oc_backend/events
    class: sfRequestRoute
    param: { module: ocBackend, action: events }
    requirements:
        sf_method: [GET, POST]

oc_backend_pros:
    url: /oc_backend/pros
    class: sfRequestRoute
    param: { module: ocBackend, action: pros }
    requirements:
        sf_method: [GET, POST]

oc_backend_snapshot:
    url: /oc_backend/snapshot
    class: sfRequestRoute
    param: { module: ocBackend, action: snapshot }
    requirements:
        sf_method: [GET, POST]

oc_snapshot:
  class: sfDoctrineRouteCollection
  options:
    model:                OcSnapshot
    module:               ocSnapshot
    prefix_path:          /oc_snapshot
    column:               id
    with_wildcard_routes: true

oc_snapshot_validate:
    url: /oc_snapshot/validate
    class: sfRequestRoute
    param: { module: ocSnapshot, action: validate }
    requirements:
        sf_method: [GET, POST]

